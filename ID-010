45. Jump Game II

STATEMENT
You are given a 0-indexed array of integers nums of length n. You are initially positioned at nums[0].
Each element nums[i] represents the maximum length of a forward jump from index i. 
In other words, if you are at nums[i], you can jump to any nums[i + j] where:
    0 <= j <= nums[i] and
    i + j < n
Return the minimum number of jumps to reach nums[n - 1]. 
The test cases are generated such that you can reach nums[n - 1].

SOLUTION
class Solution
{
public:
    int jump(vector<int>& a)
    {
        int n=a.size();
        int cnt=0;
        int curend=0;
        int farthest=0;
        for(int i=0; i<n-1; i++)
        {
            farthest=std::max(farthest, i+a[i]);
            if(i == curend)
            {
                cnt++;
                curend=farthest;
            }

        }
        return cnt;
    }
};
