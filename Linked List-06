86. Partition List

SOLUTION
//#include<bits/stdc++.h>
//using namespace std;

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution
{
public:
    ListNode* partition(ListNode* head, int x)
    {
        ListNode* current = head;
        
        ListNode* lessdummy = new ListNode(0);
        ListNode* lesstail = lessdummy;
        
        ListNode* greatdummy = new ListNode(0);
        ListNode* greattail = greatdummy;
        
        while(current != nullptr)
        {
            if(current->val < x)
            {
                lesstail->next = new ListNode(current->val);
                lesstail = lesstail->next;
                
            }
            
            else
            {
                greattail->next = new ListNode(current->val);
                greattail = greattail->next;
                
            }
            current = current->next;
            
        }
        
        lesstail->next = greatdummy->next;
        
        return lessdummy->next;
        

    }
};
