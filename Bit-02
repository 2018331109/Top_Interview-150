137. Single Number II

STATEMENT
Given an integer array nums where every element appears three times except for one, which appears exactly once. 
Find the single element and return it.
You must implement a solution with a linear runtime complexity and use only constant extra space.

SOLUTION

PYTHON- O(n*log(n))

class Solution:
    def singleNumber(self, nums: List[int]) -> int:

        nums.sort()
        n=len(nums)
        i=0
        while i+3<n:
            if nums[i]!=nums[i+2]:
                return nums[i] 
            i+=3
        return nums[i]

PYTHON: Bit Manippulation
class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        ans = 0

        for i in range(32):
            sum = 0
            for num in nums:
                sum += (num >> i) & 1
            sum %= 3
            ans |= sum << i

        # Handle negative numbers
        if ans & (1 << 31):
            ans -= (1 << 32)

        return ans
