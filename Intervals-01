56. Merge Intervals

STATEMENT
Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, 
and return an array of the non-overlapping intervals that cover all the intervals in the input.

SOLUTION
class Solution
{
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals)
    {
        sort(intervals.begin(), intervals.end());
        int n=intervals.size();
        vector<vector<int>>ans;
        int f=1;
        int s=intervals[0][0], e=intervals[0][1];

        for(int i=1; i<n; i++)
        {
            if(intervals[i][0]<=e)
            {
                e=std::max(intervals[i][1], e);
            }
            else
            {
                ans.push_back({s, e});
                s=intervals[i][0];
                e=intervals[i][1];

            }
 
        }
        ans.push_back({s, e});
        return ans;

    }
};
