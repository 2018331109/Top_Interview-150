155. Min Stack

STATTEMENT
Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.
Implement the MinStack class:
   - MinStack() initializes the stack object.
   - void push(int val) pushes the element val onto the stack.
   - void pop() removes the element on the top of the stack.
   - int top() gets the top element of the stack.
   - int getMin() retrieves the minimum element in the stack.
You must implement a solution with O(1) time complexity for each function.

SOLUTION
class MinStack
{
public:
    int mn=1000009;
    stack<int>st1, st2;
    MinStack()
    {

    }

    void push(int val)
    {
        st1.push(val);
        if(st2.empty() || val<=getMin())
        {
            st2.push(val);
        }
    }

    void pop()
    {
        if(st1.top() ==getMin())
        {
            st2.pop();
        }
        st1.pop();
    }

    int top()
    {
        return st1.top();
    }

    int getMin()
    {
        return st2.top();
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
