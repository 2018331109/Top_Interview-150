134. Gas Station

STATEMENT
There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i].
You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to 
its next (i + 1)th station. You begin the journey with an empty tank at one of the gas stations.
Given two integer arrays gas and cost, return the starting gas station's index if you can travel around 
the circuit once in the clockwise direction, otherwise return -1. 
If there exists a solution, it is guaranteed to be unique

SOLUTION
class Solution {
public:
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int n = gas.size();
        int start = 0; // Potential starting station
        int totalGas = 0; // Total gas available at the current point
        int currentGas = 0; // Gas available from the current station to the next

        for (int i = 0; i < n; ++i) {
            totalGas += gas[i] - cost[i]; // Calculate the net gas at each station

            currentGas += gas[i] - cost[i];

            // If we can't reach the next station with the current gas, reset and try the next station
            if (currentGas < 0) {
                start = i + 1;
                currentGas = 0;
            }
        }

        // If the totalGas is negative, it means it's not possible to complete the circuit.
        // Otherwise, return the start station.
        return (totalGas >= 0) ? start : -1;
    }
};
